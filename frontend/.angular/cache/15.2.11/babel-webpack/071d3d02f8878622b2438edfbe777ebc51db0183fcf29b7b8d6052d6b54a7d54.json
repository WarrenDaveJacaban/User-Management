{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services\";\nimport * as i4 from \"@angular/common\";\nfunction TransferComponent_h1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Transfer Employee: \", ctx_r0.employee.employeeId, \"\");\n  }\n}\nfunction TransferComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"span\", 14);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵtext(5, \"Loading data...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TransferComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.error, \" \");\n  }\n}\nfunction TransferComponent_div_12_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const department_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", department_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", department_r8.name, \" \");\n  }\n}\nfunction TransferComponent_div_12_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"New department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransferComponent_div_12_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtemplate(1, TransferComponent_div_12_div_31_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.departmentId.errors.required);\n  }\n}\nfunction TransferComponent_div_12_span_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 41);\n  }\n}\nfunction TransferComponent_div_12_i_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 42);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst _c1 = function (a1) {\n  return [\"../../details\", a1];\n};\nfunction TransferComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17)(2, \"div\", 18)(3, \"h5\", 11);\n    i0.ɵɵtext(4, \"Department Transfer\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 19)(6, \"div\", 20)(7, \"div\", 21)(8, \"div\", 22);\n    i0.ɵɵelement(9, \"i\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"p\", 24)(12, \"strong\");\n    i0.ɵɵtext(13, \"Current Employee:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\", 24)(16, \"strong\");\n    i0.ɵɵtext(17, \"Position:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\", 11)(20, \"strong\");\n    i0.ɵɵtext(21, \"Current Department:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(23, \"form\", 25);\n    i0.ɵɵlistener(\"ngSubmit\", function TransferComponent_div_12_Template_form_ngSubmit_23_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onSubmit());\n    });\n    i0.ɵɵelementStart(24, \"div\", 26)(25, \"label\", 27);\n    i0.ɵɵtext(26, \"Select New Department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"select\", 28)(28, \"option\", 29);\n    i0.ɵɵtext(29, \"-- Select Department --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, TransferComponent_div_12_option_30_Template, 2, 2, \"option\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(31, TransferComponent_div_12_div_31_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 32)(33, \"div\", 21)(34, \"div\", 22);\n    i0.ɵɵelement(35, \"i\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"div\")(37, \"p\", 11);\n    i0.ɵɵtext(38, \"Transferring an employee will create a workflow to track the transfer process. The initial status will be \");\n    i0.ɵɵelementStart(39, \"strong\");\n    i0.ɵɵtext(40, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(41, \".\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(42, \"div\", 34)(43, \"a\", 6);\n    i0.ɵɵelement(44, \"i\", 35);\n    i0.ɵɵtext(45, \" Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"button\", 36);\n    i0.ɵɵtemplate(47, TransferComponent_div_12_span_47_Template, 1, 0, \"span\", 37);\n    i0.ɵɵtemplate(48, TransferComponent_div_12_i_48_Template, 1, 0, \"i\", 38);\n    i0.ɵɵtext(49, \" Transfer Employee \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.employee.accountName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.employee.position, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.employee.departmentName, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx_r3.f.departmentId.errors && ctx_r3.f.departmentId.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.departments);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.departmentId.errors && ctx_r3.f.departmentId.touched);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(13, _c1, ctx_r3.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.submitting || !ctx_r3.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.submitting);\n  }\n}\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    constructor(formBuilder, route, router, employeeService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.departments = [];\n      this.loading = false;\n      this.submitting = false;\n      this.error = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.form = this.formBuilder.group({\n        departmentId: ['', Validators.required]\n      });\n      this.loading = true;\n      // Load employee and department data\n      this.employeeService.getById(this.id).pipe(first()).subscribe({\n        next: employee => {\n          this.employee = employee;\n          // Load departments excluding current one\n          this.loadDepartments();\n        },\n        error: error => {\n          this.error = error;\n          this.loading = false;\n        }\n      });\n    }\n    loadDepartments() {\n      this.departmentService.getAll().pipe(first(), finalize(() => this.loading = false)).subscribe({\n        next: departments => {\n          // Filter out current department\n          this.departments = departments.filter(dept => dept.id !== this.employee.departmentId);\n        },\n        error: error => {\n          this.error = error;\n        }\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitting = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        this.submitting = false;\n        return;\n      }\n      this.employeeService.transferEmployee(this.id, this.f.departmentId.value).pipe(first(), finalize(() => this.submitting = false)).subscribe({\n        next: result => {\n          this.alertService.success(`Employee transferred successfully. ${result.message}`, {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../details', this.id], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n        }\n      });\n    }\n  }\n  TransferComponent.ɵfac = function TransferComponent_Factory(t) {\n    return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  TransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 13,\n    vars: 7,\n    consts: [[1, \"container-fluid\", \"p-0\"], [1, \"row\", \"mb-4\"], [1, \"col-md-8\"], [\"class\", \"mb-0\", 4, \"ngIf\"], [1, \"text-muted\"], [1, \"col-md-4\", \"text-end\"], [1, \"btn\", \"btn-light\", 3, \"routerLink\"], [1, \"fas\", \"fa-arrow-left\", \"me-1\"], [\"class\", \"text-center p-5\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mb-0\"], [1, \"text-center\", \"p-5\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"mt-2\", \"mb-0\"], [1, \"alert\", \"alert-danger\"], [1, \"card\", \"shadow-sm\", \"border-0\", \"mb-4\"], [1, \"card-header\", \"bg-white\"], [1, \"card-body\"], [1, \"alert\", \"alert-info\", \"mb-4\"], [1, \"d-flex\", \"align-items-center\"], [1, \"me-3\"], [1, \"fas\", \"fa-info-circle\", \"fa-2x\"], [1, \"mb-1\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [1, \"form-label\"], [\"formControlName\", \"departmentId\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"alert\", \"alert-warning\", \"mb-4\"], [1, \"fas\", \"fa-exclamation-triangle\", \"fa-2x\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"fas\", \"fa-times\", \"me-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"class\", \"fas fa-exchange-alt me-1\", 4, \"ngIf\"], [3, \"value\"], [1, \"invalid-feedback\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"fas\", \"fa-exchange-alt\", \"me-1\"]],\n    template: function TransferComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, TransferComponent_h1_3_Template, 2, 1, \"h1\", 3);\n        i0.ɵɵelementStart(4, \"p\", 4);\n        i0.ɵɵtext(5, \"Transfer employee to a different department\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"a\", 6);\n        i0.ɵɵelement(8, \"i\", 7);\n        i0.ɵɵtext(9, \" Back to Employee \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(10, TransferComponent_div_10_Template, 6, 0, \"div\", 8);\n        i0.ɵɵtemplate(11, TransferComponent_div_11_Template, 2, 1, \"div\", 9);\n        i0.ɵɵtemplate(12, TransferComponent_div_12_Template, 50, 15, \"div\", 10);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.employee);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c1, ctx.id));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employee && !ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return TransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}